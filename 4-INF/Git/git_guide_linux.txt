>> PURPOSE <<

§ Setup Git on Linux for a 2nd user (user#2, aka "PistolMaravic") in order to clone/push from/to a GitHub repository owned by 1st user (user#1, aka "AlectoSaeglopur" using Windows).

§ Note in order for user#2 to be able to clone/push the repository, user#1 shall set user#2 as "collaborator" of the project (go to "github website > PROJECT > settings > collaborators > add people", and then user#2 has to accept). Keep in mind that if the repository is set as "public" (instead of "private", see "githug webiste > settings > change repository visibility") by user#1, this makes it visible and clonable by any GitHub user; however only if users added as collaborators can also push. Otherwise, if user#1 sets his repository as private, the only way for another user to clone/push is to be included as a collaborator of the project.

§ The procedure has been successfully tested using:
- Oracle-Virtual-Box 7.0.14;
- Ubuntu 22.04.3;
- Git v.2.34.1.

--------------------------------------------------

>> GIT SETUP FOR UBUNTU/LINUX <<

§ On shell (pt.1):
- install Git >> "sudo apt update && sudo apt install git";
- check Git has been successfully installed >> "git --version";
+ set Git username >> "git config --global user.name "fv22"";
+ set Git email >> "git config --global user.email "valmo74@hotmail.it"";
+ check Git configuration >> "git config --list";
- generate SSH key pair (so no need to login at every clone/push) >> cd ~/.ssh && ssh-keygen -o -t rsa -C "valmo74@hotmail.it"" (then empty-enter until completion) [NB: press 'Ctrl+H' to show hidden folders];
- copy the content of the created "id_rsa.pub" file into "github website > accout avatar > settings >> ssh and gpg keys > new ssh key" (including initial 'ssh-rsa' and final email);

§ On GitHub website:
- create new github account (if not existing yet), by specifying email, user_id and password (see "GITHUB#2 CREDENTIALS" section);
- open internet browser and go to "github.com > accout avatar > settings > developer settings > personal access tokens > tokens (classic) > generate a personal access token"; here write a short note, set expiration date (even none), tick all scopes and finally copy the generated token (aka "TKN" below);

§ On shell (pt.2):
- clone project >> "git clone <url>" [NB: using RR's SSH address as URL is recommended in order to exploit the generated and linked SSH key (use HTTPS only in case SSH does not work)];
- modify some files within the working tree...;
- stage all changes >> "git add .";
- commit all staged changes >> "git commit -m "<comment>"";
- push to remote repository >> "git push".

--------------------------------------------------

>> GITHUB#2 CREDENTIALS <<

UID: PistolMaravic
EML: valmo74@hotmail.it
PSW: eR4fp5?b!x   (password to be used only for GitHu8b login)
TKN: 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   (token to be used as password whenever requested by Git command line as authentication)
